{#
/**
 * @file
 * Template for a jumbotron component.
 *
 * Available config:
 * - hero_text: string
 * - calls_to_action: array of links
 * - background_image: image
 * - background_color: color value
 * - background_color_2: color value
 * - attributes: Attributes array.
 */
#}
{% set css_classes = [
  'jumbotron',
  'd-flex',
  'align-items-center',
  background_image ? 'b-lazy background-container text-white'
] %}
{% if background_image %}
<div{{ attributes.addClass(css_classes) }} data-src="{{ background }}" style="background-size: cover;">
{% else %}
<div{{ attributes.addClass(css_classes) }}>
{% endif %}
  {% if background_color and background_color_2 %}
    <div class="color-overlay" style="background: linear-gradient({{ background_color['color'] }}, {{  background_color_2['color'] }}); opacity: {{ background_color['opacity'] }}"></div>
  {% elseif background_color %}
    <div class="color-overlay" style="background-color: {{ background_color['color'] }}; opacity: {{ background_color['opacity'] }}"></div>
  {% endif %}
  <div class="card-img-overlay container px-0">
    {% if hero_text %}
      <h1 class="text-white mx-lg-6 mx-md-4">{{ hero_text }}</h1>
    {% endif %}
    {% if calls_to_action %}
      <div class="calls-to-action row justify-content-center">
        {%- for item in calls_to_action -%}
          {% set link_attributes = create_attribute() %}
          {% set link_attributes = link_attributes.addClass('btn btn-primary shadow') %}
          {{ link(item.title, item.uri, link_attributes) }}
        {%- endfor -%}
      </div>
    {% endif %}
  </div>
</div>
